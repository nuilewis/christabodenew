// Mocks generated by Mockito 5.3.2 from annotations
// in christabodenew/test/repositories/prayer_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:christabodenew/services/prayer/prayer_firestore_service.dart'
    as _i4;
import 'package:christabodenew/services/prayer/prayer_hive_service.dart' as _i3;
import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseFirestore_0 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentSnapshot_1<T extends Object?> extends _i1.SmartFake
    implements _i2.DocumentSnapshot<T> {
  _FakeDocumentSnapshot_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PrayerHiveService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrayerHiveService extends _i1.Mock implements _i3.PrayerHiveService {}

/// A class which mocks [PrayerFireStoreService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrayerFireStoreService extends _i1.Mock
    implements _i4.PrayerFireStoreService {
  @override
  _i2.FirebaseFirestore get fireStore => (super.noSuchMethod(
        Invocation.getter(#fireStore),
        returnValue: _FakeFirebaseFirestore_0(
          this,
          Invocation.getter(#fireStore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_0(
          this,
          Invocation.getter(#fireStore),
        ),
      ) as _i2.FirebaseFirestore);
  @override
  _i5.Future<_i2.DocumentSnapshot<Object?>> getPrayers() => (super.noSuchMethod(
        Invocation.method(
          #getPrayers,
          [],
        ),
        returnValue: _i5.Future<_i2.DocumentSnapshot<Object?>>.value(
            _FakeDocumentSnapshot_1<Object?>(
          this,
          Invocation.method(
            #getPrayers,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.DocumentSnapshot<Object?>>.value(
                _FakeDocumentSnapshot_1<Object?>(
          this,
          Invocation.method(
            #getPrayers,
            [],
          ),
        )),
      ) as _i5.Future<_i2.DocumentSnapshot<Object?>>);
}
