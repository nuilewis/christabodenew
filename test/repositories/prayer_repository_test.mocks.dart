// Mocks generated by Mockito 5.3.2 from annotations
// in christabodenew/test/repositories/prayer_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:christabodenew/core/connection_checker/connection_checker.dart'
    as _i7;
import 'package:christabodenew/models/prayer_model.dart' as _i5;
import 'package:christabodenew/services/prayer/prayer_firestore_service.dart'
    as _i6;
import 'package:christabodenew/services/prayer/prayer_hive_service.dart' as _i3;
import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseFirestore_0 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuerySnapshot_1<T extends Object?> extends _i1.SmartFake
    implements _i2.QuerySnapshot<T> {
  _FakeQuerySnapshot_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PrayerHiveService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrayerHiveService extends _i1.Mock implements _i3.PrayerHiveService {
  @override
  _i4.Future<List<_i5.Prayer>> getData() => (super.noSuchMethod(
        Invocation.method(
          #getData,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Prayer>>.value(<_i5.Prayer>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.Prayer>>.value(<_i5.Prayer>[]),
      ) as _i4.Future<List<_i5.Prayer>>);
}

/// A class which mocks [PrayerFireStoreService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrayerFireStoreService extends _i1.Mock
    implements _i6.PrayerFireStoreService {
  @override
  _i2.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_0(
          this,
          Invocation.getter(#firestore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_0(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i2.FirebaseFirestore);
  @override
  _i4.Future<_i2.QuerySnapshot<Object?>> getPrayers() => (super.noSuchMethod(
        Invocation.method(
          #getPrayers,
          [],
        ),
        returnValue: _i4.Future<_i2.QuerySnapshot<Object?>>.value(
            _FakeQuerySnapshot_1<Object?>(
          this,
          Invocation.method(
            #getPrayers,
            [],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.QuerySnapshot<Object?>>.value(
            _FakeQuerySnapshot_1<Object?>(
          this,
          Invocation.method(
            #getPrayers,
            [],
          ),
        )),
      ) as _i4.Future<_i2.QuerySnapshot<Object?>>);
}

/// A class which mocks [ConnectionChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectionChecker extends _i1.Mock implements _i7.ConnectionChecker {
  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
